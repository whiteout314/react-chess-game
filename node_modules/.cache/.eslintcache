[{"/home/carlos/Desktop/chess-game/src/index.js":"1","/home/carlos/Desktop/chess-game/src/App.js":"2","/home/carlos/Desktop/chess-game/src/reportWebVitals.js":"3","/home/carlos/Desktop/chess-game/src/Components/Game/Chessboard.js":"4","/home/carlos/Desktop/chess-game/src/Components/Game/Tile.js":"5","/home/carlos/Desktop/chess-game/src/Components/Game/PieceData.js":"6","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Rule.js":"7","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Pawn.js":"8","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Bishop.js":"9","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Tower.js":"10","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/King.js":"11","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Horse.js":"12","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Queen.js":"13"},{"size":500,"mtime":1639237882993,"results":"14","hashOfConfig":"15"},{"size":197,"mtime":1639424244567,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1639237882993,"results":"17","hashOfConfig":"15"},{"size":3724,"mtime":1639514396667,"results":"18","hashOfConfig":"15"},{"size":573,"mtime":1639244405803,"results":"19","hashOfConfig":"15"},{"size":5620,"mtime":1639514396667,"results":"20","hashOfConfig":"15"},{"size":959,"mtime":1639517514036,"results":"21","hashOfConfig":"15"},{"size":1448,"mtime":1639515623389,"results":"22","hashOfConfig":"15"},{"size":837,"mtime":1639514396667,"results":"23","hashOfConfig":"15"},{"size":801,"mtime":1639514396667,"results":"24","hashOfConfig":"15"},{"size":820,"mtime":1639514396667,"results":"25","hashOfConfig":"15"},{"size":1811,"mtime":1639514396667,"results":"26","hashOfConfig":"15"},{"size":1606,"mtime":1639577294742,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"paef7s",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/carlos/Desktop/chess-game/src/index.js",[],["59","60"],"/home/carlos/Desktop/chess-game/src/App.js",[],"/home/carlos/Desktop/chess-game/src/reportWebVitals.js",[],"/home/carlos/Desktop/chess-game/src/Components/Game/Chessboard.js",["61","62","63","64","65","66","67","68","69"],"import React, { useRef, useState } from \"react\";\nimport Tile from \"./Tile\"; //import the tile component to push to board\nimport { pieces } from \"./PieceData\";\nimport { rule } from \"./Rules/Rule\";\nimport \"../Style/Chessboard.css\";\nexport default function Chessboard() {\n  const chessboardRef = useRef(null);\n  let chessboard = null;\n  let element = null;\n  let white_player = true;\n  const [piece, setPiece] = useState(pieces);\n  const [color, setColor] = useState(\"white\");\n  const [grabX, setGrabX] = useState(0);\n  const [grabY, setGrabY] = useState(0);\n\n  const grabPiece = (e = React.MouseEvent) => {\n    element = e.target;\n    chessboard = chessboardRef.current;\n    if (element.classList.contains(\"piece\") && chessboard) {\n      const x = e.clientX - 50;\n      const y = e.clinetY - 50;\n      setGrabX(Math.floor((e.clientX - chessboard.offsetLeft) / 100));\n      setGrabY(\n        Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100))\n      );\n\n      element.style.position = \"absolute\";\n      element.style.top = `${y}px`;\n      element.style.left = `${x}px`;\n    }\n  };\n  const movePiece = (e = React.MouseEvent) => {\n    element = e.target;\n    chessboard = chessboardRef.current;\n    if (chessboard && element.classList.contains(\"piece\")) {\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      const minX = chessboard.offsetLeft - 40;\n      const minY = chessboard.offsetTop - 40;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n\n      if (x < minX) {\n        element.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        element.style.left = `${maxX}px`;\n      } else {\n        element.style.left = `${x}px`;\n      }\n\n      element.style.top = `${y}px`;\n    }\n  };\n  const dropPiece = (e = React.MouseEvent) => {\n    element = e.target;\n    chessboard = chessboardRef.current;\n    if (element.classList.contains(\"piece\")) {\n      let dropped = false;\n      let prev_x = null; let prev_y = null;\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      const dropX = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\n      const dropY = Math.abs(\n        Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100)\n      );\n      \n        setPiece((value) => {\n          const piece = value.map((p) => {\n              prev_x = p.x;\n              prev_y = p.y;\n            if (p.x === grabX && p.y === grabY && p.color === color) {\n              console.log(p.piece);\n              var s = rule(p.piece, p.y, dropY, p.x, dropX, p.color);\n              \n              color === \"white\" ? setColor(\"black\") : setColor(\"white\");\n              console.log(color);\n              if (s) {\n                p.x = dropX;\n                p.y = dropY;\n              }\n              \n            }\n            \n            return p;\n          });\n          \n          return piece;\n\n        });\n        \n        \n      \n\n      element.style.position = \"static\";\n      element.style.removeProperty(\"top\");\n      element.style.removeProperty(\"left\");\n    }\n  };\n\n  //initilize the chessboard array\n  let board = [];\n  //height and width of the board\n  let HEIGHT = 8;\n  let WIDTH = 8;\n\n  for (var i = HEIGHT - 1; i >= 0; --i) {\n    for (var j = 0; j < WIDTH; j++) {\n      let imageData = null;\n      let number = i + j + 2;\n      pieces.forEach((p) => {\n        if (p.x === j && p.y === i) {\n          imageData = p.image;\n        }\n      });\n      board.push(\n        <Tile key={`${j}, ${i}`} image={imageData} position={number} />\n      );\n    }\n  }\n\n  return (\n    <div\n      id=\"chessboard\"\n      ref={chessboardRef}\n      onMouseDown={grabPiece}\n      onMouseMove={movePiece}\n      onMouseUp={dropPiece}\n    >\n      {board}\n    </div>\n  );\n}\n","/home/carlos/Desktop/chess-game/src/Components/Game/Tile.js",[],"/home/carlos/Desktop/chess-game/src/Components/Game/PieceData.js",[],"/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Rule.js",["70","71","72","73","74","75"],"import React from 'react';\nimport {pawn, pawnBlack} from './Pawn';\nimport {king} from './King';\nimport {bishop} from './Bishop';\nimport {queen, newQueen} from './Queen';\nimport {horse} from './Horse';\nimport {tower} from './Tower';\nexport const rule = (piece, pY, dY, pX, dX, color) => \n{\n    switch(piece)\n    {\n        case \"pawn\":\n            switch(color)\n            {\n                case \"white\":\n                    return pawn(pY, dY, pX, dX); \n                    break;\n                case \"black\":\n                    return pawnBlack(pY, dY, pX, dX);\n            }\n           \n           break;\n        case \"king\":\n            return king(pY, dY, pX, dX);\n            break;\n        case \"tower\":\n            return tower(pX, dX, pY, dY);\n        case \"queen\":\n            return newQueen(pX, dX, pY, dY);\n        case \"bishop\":\n            return bishop(pX, dX, pY, dY);\n        case \"horse\":\n            return horse(pX, dX, pY, dY);\n\n    }\n}","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Pawn.js",[],"/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Bishop.js",["76","77","78","79"],"import { pieces } from \"../PieceData\";\nexport const bishop = (pX, dX, pY, dY) => {\n  let cont = true;\n  let attack = false;\n  pieces.forEach((p) => {\n    console.log(\"piece is fine\");\n    if (p.x === dX && p.y === dY) {\n      cont = false;\n      \n    }\n    if(p.x === dX && p.y === dY && p.color === \"black\")\n    {\n      attack = true;\n      p.x = null;\n      p.y = null;\n      console.log(\"Attack: \" + attack);\n    }\n  });\n  if(attack)\n  {\n    return true;\n  }\n  if (cont) {\n    if ((dX - pX <= 8 || dX - pX >= 0) && dX != pX && dY != pY) {\n      console.log(\"Move is valid\");\n      return true;\n    } else if (dY - pY <= 8 && dY - pY >= 0 && dX != pX && dY != pY) {\n      console.log(\"Move is valid\");\n      return true;\n    } else {\n      console.log(\"Move isn't valid\");\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Tower.js",[],"/home/carlos/Desktop/chess-game/src/Components/Game/Rules/King.js",[],"/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Horse.js",["80"],"import { findAllByDisplayValue } from '@testing-library/react';\nimport {pieces} from '../PieceData';\n\nexport const horse = (pX, dX, pY, dY) => {\n    let cont = true; \n    let attack = false;\n    pieces.forEach((p) => {\n        console.log(\"piece is fine\");\n        if (p.x === dX && p.y === dY) {\n          cont = false;\n          \n        }\n        if(p.x === dX && p.y === dY && p.color === \"black\")\n        {\n          attack = true;\n          p.x = null;\n          p.y = null;\n          console.log(\"Attack: \" + attack);\n        }\n      });\n      if(attack)\n      {\n        return true;\n      }\n\n    //Basic movement of chess pieces\n    console.log(\"Moving on the Y: \" + dY - pY);\n    console.log(\"Moving on the X: \")\n    if(cont)\n    {\n    if(((dX - pX) === 1 && (dY - pY === 2)))\n    {\n        console.log(\"Move is valid\");\n        return true;\n    }\n    else if(((dX - pX) === -1 && (dY - pY === -2)))\n    {\n        console.log(\"Move is valid\");\n        return true;\n    }\n    else if(((dX - pX) === -1 && (dY - pY === 2)))\n    {\n        console.log(\"Move is valid\");\n        return true;\n    }\n    else if(((dX - pX) === 1 && (dY - pY === -2)))\n    {\n        console.log(\"Move is valid\");\n        return true;\n    }\n    else if(((dX - pX) === 2 && (dY - pY === 1)))\n    {\n        console.log(\"Move is valid\");\n        return true;\n    }\n    else if(((dX - pX) === -2 && (dY - pY === -1)))\n    {\n        console.log(\"Move is valid\");\n        return true;\n    }\n    else if(((dX - pX) === 2 && (dY - pY === -1)))\n    {\n        console.log(\"Move is valid\");\n        return true;\n    }\n    else if(((dX - pX) === -2 && (dY - pY === 1)))\n    {\n        console.log(\"Move is valid\");\n        return true;\n    }\n    \n\n    else\n    {\n        return false;\n    }\n}\n    else\n    {   \n        return false;\n\n    }\n}","/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Queen.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":10,"column":7,"nodeType":"87","messageId":"88","endLine":10,"endColumn":19},{"ruleId":"85","severity":1,"message":"89","line":11,"column":10,"nodeType":"87","messageId":"88","endLine":11,"endColumn":15},{"ruleId":"85","severity":1,"message":"90","line":39,"column":13,"nodeType":"87","messageId":"88","endLine":39,"endColumn":17},{"ruleId":"85","severity":1,"message":"91","line":57,"column":11,"nodeType":"87","messageId":"88","endLine":57,"endColumn":18},{"ruleId":"85","severity":1,"message":"92","line":58,"column":11,"nodeType":"87","messageId":"88","endLine":58,"endColumn":17},{"ruleId":"85","severity":1,"message":"93","line":58,"column":30,"nodeType":"87","messageId":"88","endLine":58,"endColumn":36},{"ruleId":"85","severity":1,"message":"94","line":59,"column":13,"nodeType":"87","messageId":"88","endLine":59,"endColumn":14},{"ruleId":"85","severity":1,"message":"95","line":60,"column":13,"nodeType":"87","messageId":"88","endLine":60,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":109,"column":22,"nodeType":"98","messageId":"99","endLine":113,"endColumn":8},{"ruleId":"85","severity":1,"message":"100","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"101","line":5,"column":9,"nodeType":"87","messageId":"88","endLine":5,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":10,"column":5,"nodeType":"104","messageId":"105","endLine":35,"endColumn":6},{"ruleId":"102","severity":1,"message":"103","line":13,"column":13,"nodeType":"104","messageId":"105","endLine":20,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":17,"column":21,"nodeType":"108","messageId":"109","endLine":17,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":25,"column":13,"nodeType":"108","messageId":"109","endLine":25,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":24,"column":46,"nodeType":"112","messageId":"113","endLine":24,"endColumn":48},{"ruleId":"110","severity":1,"message":"111","line":24,"column":58,"nodeType":"112","messageId":"113","endLine":24,"endColumn":60},{"ruleId":"110","severity":1,"message":"111","line":27,"column":51,"nodeType":"112","messageId":"113","endLine":27,"endColumn":53},{"ruleId":"110","severity":1,"message":"111","line":27,"column":63,"nodeType":"112","messageId":"113","endLine":27,"endColumn":65},{"ruleId":"85","severity":1,"message":"114","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":31},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'white_player' is assigned a value but never used.","Identifier","unusedVar","'piece' is assigned a value but never used.","'minY' is assigned a value but never used.","'dropped' is assigned a value but never used.","'prev_x' is assigned a value but never used.","'prev_y' is assigned a value but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'j', 'i'.","ArrowFunctionExpression","unsafeRefs","'React' is defined but never used.","'queen' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'findAllByDisplayValue' is defined but never used.","no-global-assign","no-unsafe-negation"]