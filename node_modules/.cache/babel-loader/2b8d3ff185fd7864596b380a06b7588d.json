{"ast":null,"code":"import { pieces } from \"../PieceData\";\nexport const queen = (pX, dX, pY, dY) => {\n  let cont = true;\n  let attack = false;\n  pieces.forEach(p => {\n    console.log(\"piece is fine\");\n\n    if (p.x === dX && p.y === dY) {\n      cont = false;\n      console.log(\"cont \" + cont);\n\n      if (p.color === \"black\") {\n        attack = true;\n      }\n\n      if (attack && (dX - pX <= 8 || dX - pX >= 0 || dY - pY <= 8 || dY - pY >= 0)) {\n        p.x = null;\n        p.y = null;\n        return true;\n      }\n    } else if (dX + 1 === p.x && dY + 1 === p.y) {\n      cont = false;\n    }\n  }); //Basic Movements\n\n  if (cont) {\n    if ((dX - pX <= 8 || dX - pX >= 0) && (dY - pY <= 8 || dY - pY >= 0)) {\n      console.log(\"Move is valid\");\n      return true;\n    } else {\n      console.log(\"Move isn't valid\");\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Queen.js"],"names":["pieces","queen","pX","dX","pY","dY","cont","attack","forEach","p","console","log","x","y","color"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,KAAoB;AACvC,MAAIC,IAAI,GAAG,IAAX;AAEA,MAAIC,MAAM,GAAG,KAAb;AACAP,EAAAA,MAAM,CAACQ,OAAP,CAAgBC,CAAD,IAAO;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,QAAIF,CAAC,CAACG,CAAF,KAAQT,EAAR,IAAcM,CAAC,CAACI,CAAF,KAAQR,EAA1B,EAA8B;AAC5BC,MAAAA,IAAI,GAAG,KAAP;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,IAAtB;;AACA,UAAIG,CAAC,CAACK,KAAF,KAAY,OAAhB,EAAyB;AACvBP,QAAAA,MAAM,GAAG,IAAT;AACD;;AACD,UACEA,MAAM,KACLJ,EAAE,GAAGD,EAAL,IAAW,CAAX,IAAgBC,EAAE,GAAGD,EAAL,IAAW,CAA3B,IAAgCG,EAAE,GAAGD,EAAL,IAAW,CAA3C,IAAgDC,EAAE,GAAGD,EAAL,IAAW,CADtD,CADR,EAGE;AACAK,QAAAA,CAAC,CAACG,CAAF,GAAM,IAAN;AACAH,QAAAA,CAAC,CAACI,CAAF,GAAM,IAAN;AACA,eAAO,IAAP;AACD;AACF,KAdD,MAeK,IAAGV,EAAE,GAAG,CAAL,KAAWM,CAAC,CAACG,CAAb,IAAkBP,EAAE,GAAG,CAAL,KAAWI,CAAC,CAACI,CAAlC,EACL;AACEP,MAAAA,IAAI,GAAG,KAAP;AACD;AACF,GArBD,EAJuC,CA2BvC;;AACA,MAAIA,IAAJ,EAAU;AACR,QAAI,CAACH,EAAE,GAAGD,EAAL,IAAW,CAAX,IAAgBC,EAAE,GAAGD,EAAL,IAAW,CAA5B,MAAmCG,EAAE,GAAGD,EAAL,IAAW,CAAX,IAAgBC,EAAE,GAAGD,EAAL,IAAW,CAA9D,CAAJ,EAAsE;AACpEM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAO,KAAP;AACD;AACF;AACF,CArCM","sourcesContent":["import { pieces } from \"../PieceData\";\n\nexport const queen = (pX, dX, pY, dY) => {\n  let cont = true;\n\n  let attack = false;\n  pieces.forEach((p) => {\n    console.log(\"piece is fine\");\n    if (p.x === dX && p.y === dY) {\n      cont = false;\n      console.log(\"cont \" + cont);\n      if (p.color === \"black\") {\n        attack = true;\n      }\n      if (\n        attack &&\n        (dX - pX <= 8 || dX - pX >= 0 || dY - pY <= 8 || dY - pY >= 0)\n      ) {\n        p.x = null;\n        p.y = null;\n        return true;\n      }\n    }\n    else if(dX + 1 === p.x && dY + 1 === p.y)\n    {\n      cont = false;\n    }\n  });\n\n  //Basic Movements\n  if (cont) {\n    if ((dX - pX <= 8 || dX - pX >= 0) && (dY - pY <= 8 || dY - pY >= 0)) {\n      console.log(\"Move is valid\");\n      return true;\n    } else {\n      console.log(\"Move isn't valid\");\n      return false;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}