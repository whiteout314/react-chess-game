{"ast":null,"code":"import { pieces } from \"../PieceData\";\nexport const tower = (pX, dX, pY, dY) => {\n  let cont = true;\n  let attack = false;\n  pieces.forEach(p => {\n    console.log(\"piece is fine\");\n\n    if (p.x === dX && p.y === dY) {\n      cont = false;\n    }\n\n    if (p.x === dX && p.y === dY && p.color === \"black\") {\n      attack = true;\n      p.x = null;\n      p.y = null;\n      console.log(\"Attack: \" + attack);\n    }\n  });\n\n  if (attack) {\n    return true;\n  } //Basic movements\n\n\n  if (cont) {\n    if ((dX - pX <= 8 || dX - pX >= 0) && dY === pY) {\n      console.log(\"Move is Valid\");\n      return true;\n    } else if ((dY - pY <= 8 || dY - pY >= 1) && dX === pX) {\n      console.log(\"Move is Valid\");\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Tower.js"],"names":["pieces","tower","pX","dX","pY","dY","cont","attack","forEach","p","console","log","x","y","color"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,KAAoB;AACvC,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,MAAM,GAAG,KAAb;AACAP,EAAAA,MAAM,CAACQ,OAAP,CAAgBC,CAAD,IAAO;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,QAAIF,CAAC,CAACG,CAAF,KAAQT,EAAR,IAAcM,CAAC,CAACI,CAAF,KAAQR,EAA1B,EAA8B;AAC5BC,MAAAA,IAAI,GAAG,KAAP;AAED;;AACD,QAAGG,CAAC,CAACG,CAAF,KAAQT,EAAR,IAAcM,CAAC,CAACI,CAAF,KAAQR,EAAtB,IAA4BI,CAAC,CAACK,KAAF,KAAY,OAA3C,EACA;AACEP,MAAAA,MAAM,GAAG,IAAT;AACAE,MAAAA,CAAC,CAACG,CAAF,GAAM,IAAN;AACAH,MAAAA,CAAC,CAACI,CAAF,GAAM,IAAN;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaJ,MAAzB;AACD;AACF,GAbD;;AAcA,MAAGA,MAAH,EACA;AACE,WAAO,IAAP;AACD,GApBsC,CAsBvC;;;AACA,MAAID,IAAJ,EAAU;AACR,QAAI,CAACH,EAAE,GAAGD,EAAL,IAAW,CAAX,IAAgBC,EAAE,GAAGD,EAAL,IAAW,CAA5B,KAAkCG,EAAE,KAAKD,EAA7C,EAAiD;AAC/CM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAO,IAAP;AACD,KAHD,MAGO,IAAI,CAACN,EAAE,GAAGD,EAAL,IAAW,CAAX,IAAgBC,EAAE,GAAGD,EAAL,IAAW,CAA5B,KAAkCD,EAAE,KAAKD,EAA7C,EAAiD;AACtDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAO,IAAP;AACD,KAHM,MAGA;AACL,aAAO,KAAP;AACD;AACF,GAVD,MAUO;AACL,WAAO,KAAP;AACD;AACF,CApCM","sourcesContent":["import { pieces } from \"../PieceData\";\n\nexport const tower = (pX, dX, pY, dY) => {\n  let cont = true;\n  let attack = false;\n  pieces.forEach((p) => {\n    console.log(\"piece is fine\");\n    if (p.x === dX && p.y === dY) {\n      cont = false;\n      \n    }\n    if(p.x === dX && p.y === dY && p.color === \"black\")\n    {\n      attack = true;\n      p.x = null;\n      p.y = null;\n      console.log(\"Attack: \" + attack);\n    }\n  });\n  if(attack)\n  {\n    return true;\n  }\n  \n  //Basic movements\n  if (cont) {\n    if ((dX - pX <= 8 || dX - pX >= 0) && dY === pY) {\n      console.log(\"Move is Valid\");\n      return true;\n    } else if ((dY - pY <= 8 || dY - pY >= 1) && dX === pX) {\n      console.log(\"Move is Valid\");\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}