{"ast":null,"code":"export const pawn = (color, positionY, desiredPositionY) => {\n  console.log(\"Pawn Position Y: \" + positionY);\n  console.log(\"Pawn Desired Position Y: \" + desiredPositionY);\n\n  if (color === \"white\") {\n    if (positionY === 1) {\n      if ((desiredPositionY - positionY === 2 || desiredPositionY - positionY === 1) && desiredPositionX === positionX) {\n        console.log(\"Move is valid\");\n        return true;\n      } else {\n        console.log(\"Move isn't valid\");\n        return false;\n      }\n    } else {\n      if (desiredPositionY - positionY === 1) {\n        console.log(\"Move is valid\");\n        return true;\n      } else {\n        console.log(\"Move isn't valid\");\n      }\n    }\n  } else {\n    if (positionY === 6) {\n      if ((desiredPositionY - positionY === 2 || desiredPositionY - positionY === 1) && desiredPositionX === positionX) {\n        console.log(\"Move is valid\");\n        return true;\n      } else {\n        console.log(\"Move isn't valid\");\n        return false;\n      }\n    } else {\n      if (desiredPositionY - positionY === -1) {\n        console.log(\"Move is valid\");\n        return true;\n      } else {\n        console.log(\"Move isn't valid\");\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/carlosalmagro/Desktop/react-chess-game/src/Components/Game/Rules/Pawn.js"],"names":["pawn","color","positionY","desiredPositionY","console","log","desiredPositionX","positionX"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,CAACC,KAAD,EAAQC,SAAR,EAAmBC,gBAAnB,KAAwC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBH,SAAlC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BF,gBAA1C;;AACA,MAAIF,KAAK,KAAK,OAAd,EAAuB;AACrB,QAAIC,SAAS,KAAK,CAAlB,EAAqB;AACnB,UACE,CAACC,gBAAgB,GAAGD,SAAnB,KAAiC,CAAjC,IACDC,gBAAgB,GAAGD,SAAnB,KAAiC,CADjC,KAEAI,gBAAgB,KAAKC,SAHvB,EAIE;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eAAO,IAAP;AACD,OAPD,MAOO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,eAAO,KAAP;AACD;AACF,KAZD,MAYO;AACL,UAAIF,gBAAgB,GAAGD,SAAnB,KAAiC,CAArC,EAAwC;AACtCE,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF;AACF,GArBD,MAuBA;AACE,QAAIH,SAAS,KAAK,CAAlB,EAAqB;AACjB,UACI,CAACC,gBAAgB,GAAGD,SAAnB,KAAiC,CAAjC,IACGC,gBAAgB,GAAGD,SAAnB,KAAiC,CADrC,KAEII,gBAAgB,KAAKC,SAH7B,EAIE;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eAAO,IAAP;AACD,OAPD,MAOO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,eAAO,KAAP;AACD;AACF,KAZH,MAYS;AACL,UAAIF,gBAAgB,GAAGD,SAAnB,KAAiC,CAAC,CAAtC,EAAyC;AACvCE,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF;AAEJ;AACF,CAjDM","sourcesContent":["export const pawn = (color, positionY, desiredPositionY) => {\n  console.log(\"Pawn Position Y: \" + positionY);\n  console.log(\"Pawn Desired Position Y: \" + desiredPositionY);\n  if (color === \"white\") {\n    if (positionY === 1) {\n      if (\n        (desiredPositionY - positionY === 2 ||\n        desiredPositionY - positionY === 1) &&\n        desiredPositionX === positionX\n      ) {\n        console.log(\"Move is valid\");\n        return true;\n      } else {\n        console.log(\"Move isn't valid\");\n        return false;\n      }\n    } else {\n      if (desiredPositionY - positionY === 1) {\n        console.log(\"Move is valid\");\n        return true;\n      } else {\n        console.log(\"Move isn't valid\");\n      }\n    }\n  }\n  else\n  {\n    if (positionY === 6) {\n        if (\n            (desiredPositionY - positionY === 2 ||\n                desiredPositionY - positionY === 1) &&\n                desiredPositionX === positionX\n        ) {\n          console.log(\"Move is valid\");\n          return true;\n        } else {\n          console.log(\"Move isn't valid\");\n          return false;\n        }\n      } else {\n        if (desiredPositionY - positionY === -1) {\n          console.log(\"Move is valid\");\n          return true;\n        } else {\n          console.log(\"Move isn't valid\");\n        }\n      }\n\n  }\n};\n"]},"metadata":{},"sourceType":"module"}