{"ast":null,"code":"import { pieces } from \"../PieceData\";\nexport const king = (positionY, desiredPositionY, positionX, desiredPositionX) => {\n  let cont = true;\n  pieces.forEach(p => {\n    console.log(\"piece is fine\");\n\n    if (p.x === dX && p.y === dY) {\n      cont = false;\n    }\n\n    if (p.x === dX && p.y === dY && p.color === \"black\") {\n      attack = true;\n      p.x = null;\n      p.y = null;\n      console.log(\"Attack: \" + attack);\n    }\n  });\n\n  if (attack) {\n    return true;\n  }\n\n  if (cont) {\n    //Basic movements\n    if (desiredPositionY - positionY === 1 || desiredPositionY - positionY === -1) {\n      console.log(\"Move is valid\");\n      return true;\n    } else if (desiredPositionX - positionX === 1 || desiredPositionX - positionX === -1) {\n      console.log(\"Move is Valid\");\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/Users/carlosalmagro/Desktop/react-chess-game/src/Components/Game/Rules/King.js"],"names":["pieces","king","positionY","desiredPositionY","positionX","desiredPositionX","cont","forEach","p","console","log","x","dX","y","dY","color","attack"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAO,MAAMC,IAAI,GAAG,CAClBC,SADkB,EAElBC,gBAFkB,EAGlBC,SAHkB,EAIlBC,gBAJkB,KAKf;AACH,MAAIC,IAAI,GAAG,IAAX;AACAN,EAAAA,MAAM,CAACO,OAAP,CAAgBC,CAAD,IAAO;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,QAAIF,CAAC,CAACG,CAAF,KAAQC,EAAR,IAAcJ,CAAC,CAACK,CAAF,KAAQC,EAA1B,EAA8B;AAC5BR,MAAAA,IAAI,GAAG,KAAP;AAED;;AACD,QAAGE,CAAC,CAACG,CAAF,KAAQC,EAAR,IAAcJ,CAAC,CAACK,CAAF,KAAQC,EAAtB,IAA4BN,CAAC,CAACO,KAAF,KAAY,OAA3C,EACA;AACEC,MAAAA,MAAM,GAAG,IAAT;AACAR,MAAAA,CAAC,CAACG,CAAF,GAAM,IAAN;AACAH,MAAAA,CAAC,CAACK,CAAF,GAAM,IAAN;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaM,MAAzB;AACD;AACF,GAbD;;AAcA,MAAGA,MAAH,EACA;AACE,WAAO,IAAP;AACD;;AACD,MAAIV,IAAJ,EAAU;AACR;AACA,QACEH,gBAAgB,GAAGD,SAAnB,KAAiC,CAAjC,IACAC,gBAAgB,GAAGD,SAAnB,KAAiC,CAAC,CAFpC,EAGE;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAO,IAAP;AACD,KAND,MAMO,IACLL,gBAAgB,GAAGD,SAAnB,KAAiC,CAAjC,IACAC,gBAAgB,GAAGD,SAAnB,KAAiC,CAAC,CAF7B,EAGL;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAO,IAAP;AACD,KANM,MAMA;AACL,aAAO,KAAP;AACD;AACF,GAjBD,MAiBO;AACL,WAAO,KAAP;AACD;AACF,CA7CM","sourcesContent":["import { pieces } from \"../PieceData\";\nexport const king = (\n  positionY,\n  desiredPositionY,\n  positionX,\n  desiredPositionX\n) => {\n  let cont = true;\n  pieces.forEach((p) => {\n    console.log(\"piece is fine\");\n    if (p.x === dX && p.y === dY) {\n      cont = false;\n      \n    }\n    if(p.x === dX && p.y === dY && p.color === \"black\")\n    {\n      attack = true;\n      p.x = null;\n      p.y = null;\n      console.log(\"Attack: \" + attack);\n    }\n  });\n  if(attack)\n  {\n    return true;\n  }\n  if (cont) {\n    //Basic movements\n    if (\n      desiredPositionY - positionY === 1 ||\n      desiredPositionY - positionY === -1\n    ) {\n      console.log(\"Move is valid\");\n      return true;\n    } else if (\n      desiredPositionX - positionX === 1 ||\n      desiredPositionX - positionX === -1\n    ) {\n      console.log(\"Move is Valid\");\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}