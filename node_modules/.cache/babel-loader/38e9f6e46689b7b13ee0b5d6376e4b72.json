{"ast":null,"code":"import { pieces } from \"../PieceData\";\nimport { checkIfSame, checkPiece } from \"./General\";\nexport const tower = (pX, dX, pY, dY) => {\n  var multX = dX < pX ? -1 : 1;\n  var multY = dY < pY ? -1 : 1;\n\n  if (pY === dY) {\n    for (var i = 1; i < 8; i++) {\n      console.log(\"dx \" + dX);\n      console.log(\"dy \" + dY);\n      console.log(\"px \" + pX);\n      console.log(\"py \" + pY);\n\n      if (checkPiece(pX + i * multX, pY)) {\n        if (checkIfSame(pX + i * multX, pY, dX, dY)) {\n          return true;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  for (var i = 1; i < 8; i++) {\n    if (pX === dX) {\n      console.log(\"X\");\n\n      if (checkPiece(pX, pY + i * multY)) {\n        console.log(\"pY + i: \" + (pY + i));\n        console.log(\"dy: \" + dY);\n\n        if (checkIfSame(pX, pY + i * multY, dX, dY)) {\n          console.log(\"TRUrE\");\n          return true;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/carlosalmagro/Desktop/react-chess-game/src/Components/Game/Rules/Tower.js"],"names":["pieces","checkIfSame","checkPiece","tower","pX","dX","pY","dY","multX","multY","i","console","log"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,WAAxC;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,KAAoB;AACvC,MAAIC,KAAK,GAAIH,EAAE,GAAGD,EAAN,GAAY,CAAC,CAAb,GAAgB,CAA5B;AACA,MAAIK,KAAK,GAAIF,EAAE,GAAGD,EAAN,GAAY,CAAC,CAAb,GAAgB,CAA5B;;AAEA,MAAIA,EAAE,KAAKC,EAAX,EAAe;AACb,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQP,EAApB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQL,EAApB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQR,EAApB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQN,EAApB;;AAEA,UAAIJ,UAAU,CAACE,EAAE,GAAGM,CAAC,GAAGF,KAAV,EAAiBF,EAAjB,CAAd,EAAoC;AAClC,YAAIL,WAAW,CAACG,EAAE,GAAGM,CAAC,GAAGF,KAAV,EAAiBF,EAAjB,EAAqBD,EAArB,EAAyBE,EAAzB,CAAf,EAA6C;AAC3C,iBAAO,IAAP;AACD;AACF,OAJD,MAIO;AACL;AACD;AACF;AACF;;AACD,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAIN,EAAE,KAAKC,EAAX,EAAe;AACbM,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AAEA,UAAIV,UAAU,CAACE,EAAD,EAAKE,EAAE,GAAGI,CAAC,GAAGD,KAAd,CAAd,EAAoC;AAClCE,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcN,EAAE,GAAGI,CAAnB,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAASL,EAArB;;AACA,YAAIN,WAAW,CAACG,EAAD,EAAKE,EAAE,GAAGI,CAAC,GAAGD,KAAd,EAAqBJ,EAArB,EAAyBE,EAAzB,CAAf,EAA6C;AAC3CI,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,iBAAO,IAAP;AACD;AACF,OAPD,MAOO;AACL;AACD;AACF;AACF;AACF,CApCM","sourcesContent":["import { pieces } from \"../PieceData\";\nimport { checkIfSame, checkPiece } from \"./General\";\n\nexport const tower = (pX, dX, pY, dY) => {\n  var multX = (dX < pX) ? -1: 1;\n  var multY = (dY < pY) ? -1: 1;\n  \n  if (pY === dY) {\n    for (var i = 1; i < 8; i++) {\n      console.log(\"dx \" + dX);\n      console.log(\"dy \" + dY);\n      console.log(\"px \" + pX);\n      console.log(\"py \" + pY);\n\n      if (checkPiece(pX + i * multX, pY)) {\n        if (checkIfSame(pX + i * multX, pY, dX, dY)) {\n          return true;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n  for (var i = 1; i < 8; i++) {\n    if (pX === dX) {\n      console.log(\"X\");\n\n      if (checkPiece(pX, pY + i * multY)) {\n        console.log(\"pY + i: \" + (pY + i));\n        console.log(\"dy: \" + dY);\n        if (checkIfSame(pX, pY + i * multY, dX, dY)) {\n          console.log(\"TRUrE\");\n          return true;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}