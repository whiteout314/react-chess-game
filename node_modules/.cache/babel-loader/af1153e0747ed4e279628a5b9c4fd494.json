{"ast":null,"code":"import { pieces } from \"../PieceData\";\nimport { checkIfSame, checkPiece } from \"./General\";\nexport const tower = (pX, dX, pY, dY) => {\n  var mult = 0;\n  dX < pX ? mult = -1 : mult = 1;\n\n  if (pY === dY) {\n    for (var i = 1; i < 8; i++) {\n      console.log(\"dx \" + dX);\n      console.log(\"dy \" + dY);\n      console.log(\"px \" + pX);\n      console.log(\"py \" + pY);\n\n      if (checkPiece(pX + i, pY)) {\n        if (checkIfSame(pX + i, pY, dX, dY)) {\n          return true;\n        }\n\n        break;\n      }\n    }\n  }\n\n  for (var i = 1; i < 8; i++) {\n    if (pX === dX) {\n      console.log(\"X\");\n\n      if (checkPiece(pX, pY + i)) {\n        console.log(\"pY + i: \" + (pY + i));\n        console.log(\"dy: \" + dY);\n\n        if (checkIfSame(pX, pY + i, dX, dY)) {\n          console.log(\"TRUrE\");\n          return true;\n        }\n\n        break;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/carlosalmagro/Desktop/react-chess-game/src/Components/Game/Rules/Tower.js"],"names":["pieces","checkIfSame","checkPiece","tower","pX","dX","pY","dY","mult","i","console","log"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,WAAxC;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,KAAoB;AACvC,MAAIC,IAAI,GAAG,CAAX;AACAH,EAAAA,EAAE,GAAGD,EAAL,GAAWI,IAAI,GAAG,CAAC,CAAnB,GAAyBA,IAAI,GAAG,CAAhC;;AACA,MAAGF,EAAE,KAAKC,EAAV,EACA;AACE,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQN,EAApB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQJ,EAApB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQP,EAApB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQL,EAApB;;AAEA,UAAIJ,UAAU,CAACE,EAAE,GAAGK,CAAN,EAASH,EAAT,CAAd,EAA4B;AAC1B,YAAIL,WAAW,CAACG,EAAE,GAAGK,CAAN,EAASH,EAAT,EAAaD,EAAb,EAAiBE,EAAjB,CAAf,EAAqC;AACnC,iBAAO,IAAP;AACD;;AACD;AACD;AACF;AAEF;;AACD,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC5B,QAAGL,EAAE,KAAKC,EAAV,EACA;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AAEE,UAAIT,UAAU,CAACE,EAAD,EAAME,EAAE,GAAGG,CAAX,CAAd,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcL,EAAE,GAAGG,CAAnB,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAUJ,EAAtB;;AACA,YAAIN,WAAW,CAACG,EAAD,EAAME,EAAE,GAAGG,CAAX,EAAeJ,EAAf,EAAmBE,EAAnB,CAAf,EAAuC;AACrCG,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,iBAAO,IAAP;AACD;;AACD;AACD;AACF;AACF;AACF,CApCM","sourcesContent":["import { pieces } from \"../PieceData\";\nimport { checkIfSame, checkPiece } from \"./General\";\n\nexport const tower = (pX, dX, pY, dY) => {\n  var mult = 0;\n  dX < pX ? (mult = -1) : (mult = 1);\n  if(pY === dY)\n  {\n    for (var i = 1; i < 8; i++) {\n      console.log(\"dx \" + dX);\n      console.log(\"dy \" + dY);\n      console.log(\"px \" + pX);\n      console.log(\"py \" + pY);\n  \n      if (checkPiece(pX + i, pY)) {\n        if (checkIfSame(pX + i, pY, dX, dY)) {\n          return true;\n        }\n        break;\n      }\n    }\n\n  }\n  for (var i = 1; i < 8; i++) {\n  if(pX === dX)\n  {\n    console.log(\"X\");\n    \n      if (checkPiece(pX, (pY + i))) {\n        console.log(\"pY + i: \" + (pY + i))\n        console.log(\"dy: \" + (dY));\n        if (checkIfSame(pX, (pY + i), dX, dY)) {\n          console.log(\"TRUrE\");\n          return true;\n        }\n        break;\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}