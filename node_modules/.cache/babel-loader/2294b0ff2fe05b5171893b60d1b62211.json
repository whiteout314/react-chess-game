{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Desktop/chess-game/src/Components/Game/Chessboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Tile from './Tile'; //import the tile component to push to board\n\nimport { pieces } from \"./PieceData\";\nimport '../Style/Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard() {\n  _s();\n\n  const chessboardRef = useRef();\n  let active = null;\n  let chessboard = null;\n\n  const grabPiece = function () {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : React.MouseEvent;\n    const element = e.target;\n\n    if (element.classList.contains(\"piece\")) {\n      const x = e.clientX - 150;\n      const y = e.clinetY - 150;\n      console.log(chessboard.offsetLeft);\n      element.style.position = \"absolute\";\n      element.style.top = `${y}px`;\n      element.style.left = `${x}px`;\n      chessboard = chessboardRef.current;\n      active = element;\n    }\n  };\n\n  const movePiece = function () {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : React.MouseEvent;\n\n    if (chessboard && active) {\n      const x = e.clientX;\n      const y = e.clientY;\n      active.style.top = `${y}px`;\n      active.style.left = `${x}px`;\n    }\n  }; //initilize the chessboard array\n\n\n  let board = []; //height and width of the board\n\n  let HEIGHT = 8;\n  let WIDTH = 8;\n\n  for (var i = 1; i <= HEIGHT; i++) {\n    for (var j = 1; j <= WIDTH; j++) {\n      let imageData = null;\n      let number = i + j + 2;\n      pieces.forEach(p => {\n        if (p.x === j && p.y === i) {\n          imageData = p.image;\n        }\n      });\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: imageData,\n        position: number\n      }, `${j}, ${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    ref: chessboardRef,\n    onMouseDown: grabPiece,\n    onMouseMove: movePiece,\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chessboard, \"hqm8BEmtgZZuTnCWyEwuwQZCP7I=\");\n\n_c = Chessboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"sources":["/home/carlos/Desktop/chess-game/src/Components/Game/Chessboard.js"],"names":["React","useRef","Tile","pieces","Chessboard","chessboardRef","active","chessboard","grabPiece","e","MouseEvent","element","target","classList","contains","x","clientX","y","clinetY","console","log","offsetLeft","style","position","top","left","current","movePiece","clientY","board","HEIGHT","WIDTH","i","j","imageData","number","forEach","p","image","push"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\nimport Tile from './Tile'; //import the tile component to push to board\nimport {pieces} from \"./PieceData\";\nimport '../Style/Chessboard.css';\nexport default function Chessboard ()\n{\n\n    const chessboardRef = useRef();\n    let active = null; let chessboard = null;\n    const grabPiece = (e = React.MouseEvent) => {\n        const element = e.target;\n        if(element.classList.contains(\"piece\"))\n        {\n            const x = e.clientX - 150;\n            const y = e.clinetY - 150;\n            console.log(chessboard.offsetLeft);\n\n            element.style.position = \"absolute\";\n            element.style.top = `${y}px`;\n            element.style.left = `${x}px`;\n            chessboard = chessboardRef.current;\n            active = element;\n        }\n    }\n    const movePiece = (e = React.MouseEvent) => {\n        if(chessboard && active)\n        {\n            const x = e.clientX;\n            const y = e.clientY;\n\n            active.style.top = `${y}px`;\n            active.style.left = `${x}px`;\n        }\n        \n    }\n\n    //initilize the chessboard array\n    let board = [];\n    //height and width of the board\n    let HEIGHT = 8; let WIDTH = 8;\n\n    for(var i = 1; i <= HEIGHT; i++)\n    {\n        for(var j = 1; j <= WIDTH; j++)\n        {\n            let imageData = null;\n            let number = i + j + 2;\n            pieces.forEach(p => {\n                if(p.x === j && p.y === i)\n                {\n                    imageData = p.image;\n                }\n            });\n            board.push(<Tile key = {`${j}, ${i}`} image = {imageData} position = {number}/>)\n        }\n    }\n\n    return(\n        <div \n        id = \"chessboard\"\n        ref = {chessboardRef}\n        onMouseDown = {grabPiece}\n        onMouseMove = {movePiece}\n            >\n            {board}\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}