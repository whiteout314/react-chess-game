{"ast":null,"code":"import React from 'react';\nimport { pawn } from './Pawn';\nimport { king } from './King';\nimport { bishop } from './Bishop';\nimport { queen } from './Queen';\nimport { tower } from './Tower';\nexport const rule = (piece, pY, dY, pX, dX) => {\n  switch (piece) {\n    case \"pawn\":\n      return pawn(pY, dY);\n      break;\n\n    case \"king\":\n      return king(pY, dY, pX, dX);\n      break;\n\n    case \"tower\":\n      return tower(pX, dX, pY, dY);\n\n    case \"queen\":\n      return queen(pX, dX, pY, dY);\n\n    case \"bishop\":\n      return bishop(pX, dX, pY, dY);\n  }\n};","map":{"version":3,"sources":["/home/carlos/Desktop/chess-game/src/Components/Game/Rules/Rule.js"],"names":["React","pawn","king","bishop","queen","tower","rule","piece","pY","dY","pX","dX"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,KACpB;AACI,UAAOJ,KAAP;AAEI,SAAK,MAAL;AACG,aAAON,IAAI,CAACO,EAAD,EAAKC,EAAL,CAAX;AACA;;AACH,SAAK,MAAL;AACI,aAAOP,IAAI,CAACM,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,CAAX;AACA;;AACJ,SAAK,OAAL;AACI,aAAON,KAAK,CAACK,EAAD,EAAKC,EAAL,EAASH,EAAT,EAAaC,EAAb,CAAZ;;AACJ,SAAK,OAAL;AACI,aAAOL,KAAK,CAACM,EAAD,EAAKC,EAAL,EAASH,EAAT,EAAaC,EAAb,CAAZ;;AACJ,SAAK,QAAL;AACI,aAAON,MAAM,CAACO,EAAD,EAAKC,EAAL,EAASH,EAAT,EAAaC,EAAb,CAAb;AAbR;AAgBH,CAlBM","sourcesContent":["import React from 'react';\nimport {pawn} from './Pawn';\nimport {king} from './King';\nimport {bishop} from './Bishop';\nimport {queen} from './Queen';\nimport {tower} from './Tower';\nexport const rule = (piece, pY, dY, pX, dX) => \n{\n    switch(piece)\n    {\n        case \"pawn\":\n           return pawn(pY, dY); \n           break;\n        case \"king\":\n            return king(pY, dY, pX, dX);\n            break;\n        case \"tower\":\n            return tower(pX, dX, pY, dY);\n        case \"queen\":\n            return queen(pX, dX, pY, dY);\n        case \"bishop\":\n            return bishop(pX, dX, pY, dY);\n\n    }\n}"]},"metadata":{},"sourceType":"module"}